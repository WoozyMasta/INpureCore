buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.0"
group= "info.inpureprojects.core" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "INpureCore"

minecraft {
    version = "1.7.10-10.13.2.1235"
    assetDir = "eclipse/assets"
}

repositories {
     maven { // the repo from which to get NEI and stuff
         name 'CB Repo'
         url "http://chickenbones.net/maven/"
     }
	 
	 maven { // The repo from which to get waila
         name "Mobius Repo"
         url "http://mobiusstrip.eu/maven"
     }
	 
	 maven {
            name = "inpure"
            url = "http://files.inpureprojects.info/maven"
     }
	 
	 maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
}

dependencies {
	compile 'info.inpureprojects:INpureLib:[1.7.10]1.0.0B0-2:dev'
    compile 'appeng:appliedenergistics2:rv1-stable-1:dev'
	compile 'codechicken:NotEnoughItems:1.7.10-1.0.3.57:dev'
	compile 'codechicken:ForgeMultipart:1.7.10-1.1.0.313:dev'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
	manifest {
		attributes 'FMLCorePlugin': 'info.inpureprojects.core.Preloader.INpurePreLoader'
		attributes 'FMLCorePluginContainsFMLMod': 'true'
		attributes 'FMLAT': 'inpure_at.cfg'
    }
}
